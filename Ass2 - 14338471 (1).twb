<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Australian Open (2023 Australia Open champions - v1)' inline='true' name='federated.1cia3xi1ntbl2910ga7vm1evw4rg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2023 Australia Open champions - v1' name='excel-direct.1cfz8mm0m8mpsm0zthuhi0bbzss2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/bibek/Downloads/2023 Australia Open champions - v1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1cfz8mm0m8mpsm0zthuhi0bbzss2' name='Australian Open' table='[&apos;Australian Open$&apos;]' type='table'>
          <columns gridOrigin='A1:Y209:no:A1:Y209:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='string' name='Gender' ordinal='1' />
            <column datatype='string' name='Champion' ordinal='2' />
            <column datatype='string' name='Champion Nationality' ordinal='3' />
            <column datatype='string' name='Champion Country' ordinal='4' />
            <column datatype='string' name='Champion Seed' ordinal='5' />
            <column datatype='string' name='Mins' ordinal='6' />
            <column datatype='string' name='Score' ordinal='7' />
            <column datatype='integer' name='1st-won' ordinal='8' />
            <column datatype='integer' name='1st-loss' ordinal='9' />
            <column datatype='integer' name='2nd-won' ordinal='10' />
            <column datatype='integer' name='2nd-loss' ordinal='11' />
            <column datatype='integer' name='3rd-won' ordinal='12' />
            <column datatype='integer' name='3rd-loss' ordinal='13' />
            <column datatype='integer' name='4th-won' ordinal='14' />
            <column datatype='integer' name='4th-loss' ordinal='15' />
            <column datatype='integer' name='5th-won' ordinal='16' />
            <column datatype='integer' name='5th-loss' ordinal='17' />
            <column datatype='integer' name='Win' ordinal='18' />
            <column datatype='integer' name='Loss' ordinal='19' />
            <column datatype='real' name='Win Ratio' ordinal='20' />
            <column datatype='string' name='Runner-up' ordinal='21' />
            <column datatype='string' name='Runner-up Nationality' ordinal='22' />
            <column datatype='string' name='Runner-up Country' ordinal='23' />
            <column datatype='string' name='Runner-up Seed' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1cfz8mm0m8mpsm0zthuhi0bbzss2' name='Australian Open' table='[&apos;Australian Open$&apos;]' type='table'>
          <columns gridOrigin='A1:Y209:no:A1:Y209:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='string' name='Gender' ordinal='1' />
            <column datatype='string' name='Champion' ordinal='2' />
            <column datatype='string' name='Champion Nationality' ordinal='3' />
            <column datatype='string' name='Champion Country' ordinal='4' />
            <column datatype='string' name='Champion Seed' ordinal='5' />
            <column datatype='string' name='Mins' ordinal='6' />
            <column datatype='string' name='Score' ordinal='7' />
            <column datatype='integer' name='1st-won' ordinal='8' />
            <column datatype='integer' name='1st-loss' ordinal='9' />
            <column datatype='integer' name='2nd-won' ordinal='10' />
            <column datatype='integer' name='2nd-loss' ordinal='11' />
            <column datatype='integer' name='3rd-won' ordinal='12' />
            <column datatype='integer' name='3rd-loss' ordinal='13' />
            <column datatype='integer' name='4th-won' ordinal='14' />
            <column datatype='integer' name='4th-loss' ordinal='15' />
            <column datatype='integer' name='5th-won' ordinal='16' />
            <column datatype='integer' name='5th-loss' ordinal='17' />
            <column datatype='integer' name='Win' ordinal='18' />
            <column datatype='integer' name='Loss' ordinal='19' />
            <column datatype='real' name='Win Ratio' ordinal='20' />
            <column datatype='string' name='Runner-up' ordinal='21' />
            <column datatype='string' name='Runner-up Nationality' ordinal='22' />
            <column datatype='string' name='Runner-up Country' ordinal='23' />
            <column datatype='string' name='Runner-up Seed' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y209:no:A1:Y209:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Champion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Champion]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Champion</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Champion Nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Champion Nationality]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Champion Nationality</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Champion Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Champion Country]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Champion Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Champion Seed</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Champion Seed]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Champion Seed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mins</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Mins]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Mins</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st-won</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1st-won]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>1st-won</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st-loss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1st-loss]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>1st-loss</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2nd-won</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2nd-won]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>2nd-won</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2nd-loss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2nd-loss]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>2nd-loss</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3rd-won</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3rd-won]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>3rd-won</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3rd-loss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3rd-loss]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>3rd-loss</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4th-won</remote-name>
            <remote-type>20</remote-type>
            <local-name>[4th-won]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>4th-won</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4th-loss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[4th-loss]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>4th-loss</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5th-won</remote-name>
            <remote-type>20</remote-type>
            <local-name>[5th-won]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>5th-won</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5th-loss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[5th-loss]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>5th-loss</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Win]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Win</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Loss]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Loss</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Win Ratio]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Win Ratio</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runner-up</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Runner-up]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Runner-up</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runner-up Nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Runner-up Nationality]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Runner-up Nationality</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runner-up Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Runner-up Country]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Runner-up Country</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runner-up Seed</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Runner-up Seed]</local-name>
            <parent-name>[Australian Open]</parent-name>
            <remote-alias>Runner-up Seed</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Australian Open_D857CE179CC642B196CF44188C5FBBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='1St-Won Norm' datatype='real' name='[1St-Loss Norm  (copy)_1699545931447873541]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([1st-won])-WINDOW_MIN(SUM([1st-won])))/(WINDOW_MAX(SUM([1st-won]))-WINDOW_MIN(SUM([1st-won])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Win Rate Norm' datatype='real' name='[1St-Loss Norm  (copy)_1699545931449593862]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Win Ratio])-WINDOW_MIN(SUM([Win Ratio])))/(WINDOW_MAX(SUM([Win Ratio]))-WINDOW_MIN(SUM([Win Ratio])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='1St-Loss Norm ' datatype='real' name='[1St-Won Norm (copy)_1699545931440775169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([1st-loss])-WINDOW_MIN(SUM([1st-loss])))/(WINDOW_MAX(SUM([1st-loss]))-WINDOW_MIN(SUM([1st-loss])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='2Nd-Loss Norm' datatype='real' name='[1St-Won Norm (copy)_1699545931453136905]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([2nd-loss])-WINDOW_MIN(SUM([2nd-loss])))/(WINDOW_MAX(SUM([2nd-loss]))-WINDOW_MIN(SUM([2nd-loss])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='1St-Loss' datatype='integer' name='[1st-loss]' role='measure' type='quantitative' />
      <column caption='1St-Won' datatype='integer' name='[1st-won]' role='measure' type='quantitative' />
      <column caption='2Nd-Loss' datatype='integer' name='[2nd-loss]' role='measure' type='quantitative' />
      <column caption='2Nd-Won' datatype='integer' name='[2nd-won]' role='measure' type='quantitative' />
      <column caption='3Rd-Loss' datatype='integer' name='[3rd-loss]' role='measure' type='quantitative' />
      <column caption='3Rd-Won' datatype='integer' name='[3rd-won]' role='measure' type='quantitative' />
      <column caption='4Th-Loss' datatype='integer' name='[4th-loss]' role='measure' type='quantitative' />
      <column caption='4Th-Won' datatype='integer' name='[4th-won]' role='measure' type='quantitative' />
      <column caption='5Th-Loss' datatype='integer' name='[5th-loss]' role='measure' type='quantitative' />
      <column caption='5Th-Won' datatype='integer' name='[5th-won]' role='measure' type='quantitative' />
      <column datatype='string' name='[Champion Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Champion Nationality]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Champion Seed]' role='dimension' type='nominal' />
      <column datatype='string' name='[Champion]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Mins]' role='dimension' type='nominal' />
      <column datatype='string' name='[Runner-up Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Loss  Norm' datatype='real' name='[Win  Norm (copy)_1699545931451342856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Loss])-WINDOW_MIN(SUM([Loss])))/(WINDOW_MAX(SUM([Loss]))-WINDOW_MIN(SUM([Loss])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Win  Norm' datatype='real' name='[Win Rate Norm (copy)_1699545931451097095]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Win])-WINDOW_MIN(SUM([Win])))/(WINDOW_MAX(SUM([Win]))-WINDOW_MIN(SUM([Win])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Win Ratio]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
      <column caption='2Nd-Won Norm' datatype='real' name='[[2Nd-Loss]] Norm (copy)_1699545931453313034]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([2nd-won])-WINDOW_MIN(SUM([2nd-won])))/(WINDOW_MAX(SUM([2nd-won]))-WINDOW_MIN(SUM([2nd-won])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='3Rd-Won Norm ' datatype='real' name='[[2Nd-Won]] Norm (copy) (copy)_1699545931453476875]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([3rd-won])-WINDOW_MIN(SUM([3rd-won])))/(WINDOW_MAX(SUM([3rd-won]))-WINDOW_MIN(SUM([3rd-won])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='3Rd-Loss Norm' datatype='real' name='[[3Rd-Won]] Norm  (copy)_1699545931453595660]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([3rd-loss])-WINDOW_MIN(SUM([3rd-loss])))/(WINDOW_MAX(SUM([3rd-loss]))-WINDOW_MIN(SUM([3rd-loss])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='4Th-Loss Norm' datatype='real' name='[[3Rd-Won]] Norm  (copy)_1699545931453788173]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([4th-loss])-WINDOW_MIN(SUM([4th-loss])))/(WINDOW_MAX(SUM([4th-loss]))-WINDOW_MIN(SUM([4th-loss])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='4Th-Won Norm' datatype='real' name='[[4Th-Loss]] Norm  (copy) (copy)_1699545931453898766]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([4th-won])-WINDOW_MIN(SUM([4th-won])))/(WINDOW_MAX(SUM([4th-won]))-WINDOW_MIN(SUM([4th-won])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='5Th-Loss Norm' datatype='real' name='[[4Th-Won]] Norm  (copy) (copy) (copy)_1699545931454038031]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([5th-loss])-WINDOW_MIN(SUM([5th-loss])))/(WINDOW_MAX(SUM([5th-loss]))-WINDOW_MIN(SUM([5th-loss])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='5Th-Won Norm' datatype='real' name='[[5Th-Loss]] Norm  (copy) (copy) (copy) (copy)_1699545931454148624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([5th-won])-WINDOW_MIN(SUM([5th-won])))/(WINDOW_MAX(SUM([5th-won]))-WINDOW_MIN(SUM([5th-won])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Australian Open' datatype='table' name='[__tableau_internal_object_id__].[Australian Open_D857CE179CC642B196CF44188C5FBBE8]' role='measure' type='quantitative' />
      <column-instance column='[Win Ratio]' derivation='Avg' name='[avg:Win Ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Win]' derivation='Avg' name='[avg:Win:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Win]' derivation='Count' name='[cnt:Win:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Win]' derivation='Max' name='[max:Win:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Champion Country]' derivation='None' name='[none:Champion Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Champion Nationality]' derivation='None' name='[none:Champion Nationality:nk]' pivot='key' type='nominal' />
      <column-instance column='[Champion]' derivation='None' name='[none:Champion:nk]' pivot='key' type='nominal' />
      <column-instance column='[Win Ratio]' derivation='Sum' name='[sum:Win Ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Win]' derivation='Sum' name='[sum:Win:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1St-Loss Norm  (copy)_1699545931447873541]' derivation='User' name='[usr:1St-Loss Norm  (copy)_1699545931447873541:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Champion]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[1St-Loss Norm  (copy)_1699545931447873541]' derivation='User' name='[usr:1St-Loss Norm  (copy)_1699545931447873541:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[1St-Won Norm (copy)_1699545931440775169]' derivation='User' name='[usr:1St-Won Norm (copy)_1699545931440775169:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Champion]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[1St-Won Norm (copy)_1699545931440775169]' derivation='User' name='[usr:1St-Won Norm (copy)_1699545931440775169:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Won Norm (copy)_1699545931440775169:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Won Norm (copy)_1699545931440775169:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Win Ratio:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Win:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[cnt:Win:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[max:Win:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win Ratio:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931447873541:qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931447873541:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Champion Nationality:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;YUG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TCH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RSA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Champion Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yugoslavia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechoslovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Champion:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arthur Ashe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dorothy Round&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jim Courier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Margaret Smith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rhys Gemmell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yevgeny Kafelnikov&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adrian Quist&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chris O&apos;Neil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hana Mandlíková&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kim Clijsters&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nancye Wynne Bolton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sylvia Lance Harper&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andre Agassi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dinny Pails&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;James Anderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Louise Brough&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pat O&apos;Hara Wood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia Wade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ashley Cooper&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Esna Boyd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John Bromwich&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martina Navratilova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roscoe Tanner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arthur O&apos;Hara Wood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edgar Moon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jimmy Connors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maria Sharapova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rod Laver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angela Mortimer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Don Budge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;James Cecil Parke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marat Safin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pete Sampras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vitas Gerulaitis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caroline Wozniacki&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gordon Lowe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ken Rosewall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monica Seles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stefan Edberg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Olmedo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Buttsworth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Horace Rice&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lew Hoad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naomi Osaka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thelma Coyne Long&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boris Becker&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fred Perry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Justine Henin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maureen Connolly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sofia Kenin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angelique Kerber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Doris Hart&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jean Borotra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Margaret Court&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Petr Korda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vivian McGrath&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbara Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Evonne Goolagong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;John Colin Gregory&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mary Carter Reitano&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy Emerson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beryl Penrose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Frank Sedgman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Hawkes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mary Pierce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serena Williams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brian Teacher&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gerald Patterson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ken McGregor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mervyn Rose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stan Wawrinka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chris Evert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guillermo Vilas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kerry Melville Reid&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nancy Richey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steffi Graf&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aryna Sabalenka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emily Hood Westacott&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joan Hartigan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mark Edmondson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rodney Heath&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anthony Wilding&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dorothy Cheney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jennifer Capriati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Margaret Molesworth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rafael Nadal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;William Bowrey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algernon Kingscote&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Daphne Akhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivan Lendl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Li Na&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norman Brookes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thomas Johansson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Billie Jean King&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fred Alexander&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Newcombe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mats Wilander&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shirley Fry Irvin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashleigh Barty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ernie Parker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johan Kriek&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martina Hingis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roger Federer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amélie Mauresmo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dick Savitt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jack Crawford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindsay Davenport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Novak Djokovic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Victoria Azarenka&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Nepal&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Australian Open' id='Australian Open_D857CE179CC642B196CF44188C5FBBE8'>
            <properties context=''>
              <relation connection='excel-direct.1cfz8mm0m8mpsm0zthuhi0bbzss2' name='Australian Open' table='[&apos;Australian Open$&apos;]' type='table'>
                <columns gridOrigin='A1:Y209:no:A1:Y209:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='string' name='Gender' ordinal='1' />
                  <column datatype='string' name='Champion' ordinal='2' />
                  <column datatype='string' name='Champion Nationality' ordinal='3' />
                  <column datatype='string' name='Champion Country' ordinal='4' />
                  <column datatype='string' name='Champion Seed' ordinal='5' />
                  <column datatype='string' name='Mins' ordinal='6' />
                  <column datatype='string' name='Score' ordinal='7' />
                  <column datatype='integer' name='1st-won' ordinal='8' />
                  <column datatype='integer' name='1st-loss' ordinal='9' />
                  <column datatype='integer' name='2nd-won' ordinal='10' />
                  <column datatype='integer' name='2nd-loss' ordinal='11' />
                  <column datatype='integer' name='3rd-won' ordinal='12' />
                  <column datatype='integer' name='3rd-loss' ordinal='13' />
                  <column datatype='integer' name='4th-won' ordinal='14' />
                  <column datatype='integer' name='4th-loss' ordinal='15' />
                  <column datatype='integer' name='5th-won' ordinal='16' />
                  <column datatype='integer' name='5th-loss' ordinal='17' />
                  <column datatype='integer' name='Win' ordinal='18' />
                  <column datatype='integer' name='Loss' ordinal='19' />
                  <column datatype='real' name='Win Ratio' ordinal='20' />
                  <column datatype='string' name='Runner-up' ordinal='21' />
                  <column datatype='string' name='Runner-up Nationality' ordinal='22' />
                  <column datatype='string' name='Runner-up Country' ordinal='23' />
                  <column datatype='string' name='Runner-up Seed' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Transpose (2023-1-32146-Asst1-sample data -v2)' inline='true' name='federated.0bhf7sg08eejxj15dr3wg1voz24a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2023-1-32146-Asst1-sample data -v2' name='excel-direct.0n59agv1jsbtbr17naspv0s41z7s'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/bibek/Downloads/14338471_A1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0n59agv1jsbtbr17naspv0s41z7s' name='Transpose' table='[Transpose$]' type='table'>
          <columns gridOrigin='A1:AZ11:no:A1:AZ11:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='string' name='Time' ordinal='1' />
            <column datatype='integer' name='MedianHousePrice' ordinal='2' />
            <column datatype='integer' name='MedianUnitPrice' ordinal='3' />
            <column datatype='integer' name='MedianPersonalWeeklyIncome' ordinal='4' />
            <column datatype='integer' name='MedianFamilyWeeklyIncome' ordinal='5' />
            <column datatype='integer' name='MedianHouseholdWeeIklyIncome' ordinal='6' />
            <column datatype='real' name='MedianMortgageWeeklyPayment' ordinal='7' />
            <column datatype='integer' name='MedianWeeklyRent' ordinal='8' />
            <column datatype='integer' name='Population' ordinal='9' />
            <column datatype='integer' name='MedianAge' ordinal='10' />
            <column datatype='integer' name='Families' ordinal='11' />
            <column datatype='integer' name='TotalPrivateDwelling' ordinal='12' />
            <column datatype='real' name='Married(%)' ordinal='13' />
            <column datatype='real' name='Separated+Divorced(%)' ordinal='14' />
            <column datatype='real' name='Widowed(%)' ordinal='15' />
            <column datatype='real' name='NeverMarried(%)' ordinal='16' />
            <column datatype='real' name='BirthInAustralia(%)' ordinal='17' />
            <column datatype='real' name='Worked full-time(%)' ordinal='18' />
            <column datatype='real' name='Worked part-time(%)' ordinal='19' />
            <column datatype='real' name='Unemployment(%)' ordinal='20' />
            <column datatype='real' name='PeopleTravelledToWorkByPublicTransport(%)' ordinal='21' />
            <column datatype='real' name='PeopleTravelledToWorkByCar(%)' ordinal='22' />
            <column datatype='real' name='AverageMotorVehiclesPerDwelling' ordinal='23' />
            <column datatype='real' name='CoupleFamilyNoChidren(%)' ordinal='24' />
            <column datatype='real' name='CoupleFamilyHasChidren(%)' ordinal='25' />
            <column datatype='real' name='OneParentFamily(%)' ordinal='26' />
            <column datatype='real' name='OtherFamily(%)' ordinal='27' />
            <column datatype='real' name='OccupiedDwellings(%)' ordinal='28' />
            <column datatype='real' name='UnoccupiedDwelling(%)' ordinal='29' />
            <column datatype='real' name='SeparateHouse(dwellings%)' ordinal='30' />
            <column datatype='real' name='SemiDetached(dwellings%)' ordinal='31' />
            <column datatype='real' name='FlatUnitApartment(dwellings%)' ordinal='32' />
            <column datatype='real' name='0xBedroom(%)' ordinal='33' />
            <column datatype='real' name='1xBedroom(%)' ordinal='34' />
            <column datatype='real' name='2xBedroom(%)' ordinal='35' />
            <column datatype='real' name='3xBedroom(%)' ordinal='36' />
            <column datatype='real' name='4xBedroom+(%)' ordinal='37' />
            <column datatype='integer' name='AverageNumberBedroomsPerDwelling' ordinal='38' />
            <column datatype='real' name='AverageNumberPeoplePerHousehold' ordinal='39' />
            <column datatype='real' name='FullyOwned(%)' ordinal='40' />
            <column datatype='real' name='OwnedWithMortgage(%)' ordinal='41' />
            <column datatype='real' name='Rented(%)' ordinal='42' />
            <column datatype='real' name='FamilyHouseHolds(%)' ordinal='43' />
            <column datatype='real' name='SinglePersonHouseHolds(%)' ordinal='44' />
            <column datatype='real' name='GroupHouseHold(%)' ordinal='45' />
            <column datatype='real' name='LessThan$650WeeklyIncome(%)' ordinal='46' />
            <column datatype='real' name='MoreThan$3000WeeklyIncome(%)' ordinal='47' />
            <column datatype='real' name='HouseholdsRentPayments&lt;30%Income (%)' ordinal='48' />
            <column datatype='real' name='HouseholdsRentPayments&gt;30%Income(%)' ordinal='49' />
            <column datatype='real' name='HouseholdsMortgageRepayments&lt;30%Income(%)' ordinal='50' />
            <column datatype='real' name='HouseholdsMortgageRepayments&gt;30%Income(%)' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0n59agv1jsbtbr17naspv0s41z7s' name='Transpose' table='[Transpose$]' type='table'>
          <columns gridOrigin='A1:AZ11:no:A1:AZ11:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='string' name='Time' ordinal='1' />
            <column datatype='integer' name='MedianHousePrice' ordinal='2' />
            <column datatype='integer' name='MedianUnitPrice' ordinal='3' />
            <column datatype='integer' name='MedianPersonalWeeklyIncome' ordinal='4' />
            <column datatype='integer' name='MedianFamilyWeeklyIncome' ordinal='5' />
            <column datatype='integer' name='MedianHouseholdWeeIklyIncome' ordinal='6' />
            <column datatype='real' name='MedianMortgageWeeklyPayment' ordinal='7' />
            <column datatype='integer' name='MedianWeeklyRent' ordinal='8' />
            <column datatype='integer' name='Population' ordinal='9' />
            <column datatype='integer' name='MedianAge' ordinal='10' />
            <column datatype='integer' name='Families' ordinal='11' />
            <column datatype='integer' name='TotalPrivateDwelling' ordinal='12' />
            <column datatype='real' name='Married(%)' ordinal='13' />
            <column datatype='real' name='Separated+Divorced(%)' ordinal='14' />
            <column datatype='real' name='Widowed(%)' ordinal='15' />
            <column datatype='real' name='NeverMarried(%)' ordinal='16' />
            <column datatype='real' name='BirthInAustralia(%)' ordinal='17' />
            <column datatype='real' name='Worked full-time(%)' ordinal='18' />
            <column datatype='real' name='Worked part-time(%)' ordinal='19' />
            <column datatype='real' name='Unemployment(%)' ordinal='20' />
            <column datatype='real' name='PeopleTravelledToWorkByPublicTransport(%)' ordinal='21' />
            <column datatype='real' name='PeopleTravelledToWorkByCar(%)' ordinal='22' />
            <column datatype='real' name='AverageMotorVehiclesPerDwelling' ordinal='23' />
            <column datatype='real' name='CoupleFamilyNoChidren(%)' ordinal='24' />
            <column datatype='real' name='CoupleFamilyHasChidren(%)' ordinal='25' />
            <column datatype='real' name='OneParentFamily(%)' ordinal='26' />
            <column datatype='real' name='OtherFamily(%)' ordinal='27' />
            <column datatype='real' name='OccupiedDwellings(%)' ordinal='28' />
            <column datatype='real' name='UnoccupiedDwelling(%)' ordinal='29' />
            <column datatype='real' name='SeparateHouse(dwellings%)' ordinal='30' />
            <column datatype='real' name='SemiDetached(dwellings%)' ordinal='31' />
            <column datatype='real' name='FlatUnitApartment(dwellings%)' ordinal='32' />
            <column datatype='real' name='0xBedroom(%)' ordinal='33' />
            <column datatype='real' name='1xBedroom(%)' ordinal='34' />
            <column datatype='real' name='2xBedroom(%)' ordinal='35' />
            <column datatype='real' name='3xBedroom(%)' ordinal='36' />
            <column datatype='real' name='4xBedroom+(%)' ordinal='37' />
            <column datatype='integer' name='AverageNumberBedroomsPerDwelling' ordinal='38' />
            <column datatype='real' name='AverageNumberPeoplePerHousehold' ordinal='39' />
            <column datatype='real' name='FullyOwned(%)' ordinal='40' />
            <column datatype='real' name='OwnedWithMortgage(%)' ordinal='41' />
            <column datatype='real' name='Rented(%)' ordinal='42' />
            <column datatype='real' name='FamilyHouseHolds(%)' ordinal='43' />
            <column datatype='real' name='SinglePersonHouseHolds(%)' ordinal='44' />
            <column datatype='real' name='GroupHouseHold(%)' ordinal='45' />
            <column datatype='real' name='LessThan$650WeeklyIncome(%)' ordinal='46' />
            <column datatype='real' name='MoreThan$3000WeeklyIncome(%)' ordinal='47' />
            <column datatype='real' name='HouseholdsRentPayments&lt;30%Income (%)' ordinal='48' />
            <column datatype='real' name='HouseholdsRentPayments&gt;30%Income(%)' ordinal='49' />
            <column datatype='real' name='HouseholdsMortgageRepayments&lt;30%Income(%)' ordinal='50' />
            <column datatype='real' name='HouseholdsMortgageRepayments&gt;30%Income(%)' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Transpose]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AZ11:no:A1:AZ11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianHousePrice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MedianHousePrice]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>MedianHousePrice</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianUnitPrice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MedianUnitPrice]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>MedianUnitPrice</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianPersonalWeeklyIncome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MedianPersonalWeeklyIncome]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>MedianPersonalWeeklyIncome</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianFamilyWeeklyIncome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MedianFamilyWeeklyIncome]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>MedianFamilyWeeklyIncome</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianHouseholdWeeIklyIncome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MedianHouseholdWeeIklyIncome]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>MedianHouseholdWeeIklyIncome</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianMortgageWeeklyPayment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MedianMortgageWeeklyPayment]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>MedianMortgageWeeklyPayment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianWeeklyRent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MedianWeeklyRent]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>MedianWeeklyRent</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianAge</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MedianAge]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>MedianAge</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Families</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Families]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Families</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalPrivateDwelling</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalPrivateDwelling]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>TotalPrivateDwelling</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Married(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Married(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Married(%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Separated+Divorced(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Separated+Divorced(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Separated+Divorced(%)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Widowed(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Widowed(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Widowed(%)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NeverMarried(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NeverMarried(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>NeverMarried(%)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BirthInAustralia(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BirthInAustralia(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>BirthInAustralia(%)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Worked full-time(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Worked full-time(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Worked full-time(%)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Worked part-time(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Worked part-time(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Worked part-time(%)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Unemployment(%)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PeopleTravelledToWorkByPublicTransport(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PeopleTravelledToWorkByPublicTransport(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>PeopleTravelledToWorkByPublicTransport(%)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PeopleTravelledToWorkByCar(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PeopleTravelledToWorkByCar(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>PeopleTravelledToWorkByCar(%)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageMotorVehiclesPerDwelling</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageMotorVehiclesPerDwelling]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>AverageMotorVehiclesPerDwelling</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CoupleFamilyNoChidren(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CoupleFamilyNoChidren(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>CoupleFamilyNoChidren(%)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CoupleFamilyHasChidren(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CoupleFamilyHasChidren(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>CoupleFamilyHasChidren(%)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OneParentFamily(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OneParentFamily(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>OneParentFamily(%)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OtherFamily(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OtherFamily(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>OtherFamily(%)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OccupiedDwellings(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OccupiedDwellings(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>OccupiedDwellings(%)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UnoccupiedDwelling(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UnoccupiedDwelling(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>UnoccupiedDwelling(%)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SeparateHouse(dwellings%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SeparateHouse(dwellings%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>SeparateHouse(dwellings%)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SemiDetached(dwellings%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SemiDetached(dwellings%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>SemiDetached(dwellings%)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlatUnitApartment(dwellings%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FlatUnitApartment(dwellings%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>FlatUnitApartment(dwellings%)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0xBedroom(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[0xBedroom(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>0xBedroom(%)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1xBedroom(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1xBedroom(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>1xBedroom(%)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2xBedroom(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2xBedroom(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>2xBedroom(%)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3xBedroom(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3xBedroom(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>3xBedroom(%)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4xBedroom+(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[4xBedroom+(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>4xBedroom+(%)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageNumberBedroomsPerDwelling</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AverageNumberBedroomsPerDwelling]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>AverageNumberBedroomsPerDwelling</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageNumberPeoplePerHousehold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageNumberPeoplePerHousehold]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>AverageNumberPeoplePerHousehold</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FullyOwned(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FullyOwned(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>FullyOwned(%)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OwnedWithMortgage(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OwnedWithMortgage(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>OwnedWithMortgage(%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rented(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rented(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>Rented(%)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FamilyHouseHolds(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FamilyHouseHolds(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>FamilyHouseHolds(%)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SinglePersonHouseHolds(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SinglePersonHouseHolds(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>SinglePersonHouseHolds(%)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GroupHouseHold(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GroupHouseHold(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>GroupHouseHold(%)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LessThan$650WeeklyIncome(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LessThan$650WeeklyIncome(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>LessThan$650WeeklyIncome(%)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MoreThan$3000WeeklyIncome(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MoreThan$3000WeeklyIncome(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>MoreThan$3000WeeklyIncome(%)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name><![CDATA[HouseholdsRentPayments<30%Income (%)]]></remote-name>
            <remote-type>5</remote-type>
            <local-name><![CDATA[[HouseholdsRentPayments<30%Income (%)]]]></local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias><![CDATA[HouseholdsRentPayments<30%Income (%)]]></remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HouseholdsRentPayments&gt;30%Income(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HouseholdsRentPayments&gt;30%Income(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>HouseholdsRentPayments&gt;30%Income(%)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name><![CDATA[HouseholdsMortgageRepayments<30%Income(%)]]></remote-name>
            <remote-type>5</remote-type>
            <local-name><![CDATA[[HouseholdsMortgageRepayments<30%Income(%)]]]></local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias><![CDATA[HouseholdsMortgageRepayments<30%Income(%)]]></remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HouseholdsMortgageRepayments&gt;30%Income(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HouseholdsMortgageRepayments&gt;30%Income(%)]</local-name>
            <parent-name>[Transpose]</parent-name>
            <remote-alias>HouseholdsMortgageRepayments&gt;30%Income(%)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Transpose_54E7CECD19AD4366B262D6E0939F61CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Motor Vehicles Per Dwelling' datatype='real' name='[AverageMotorVehiclesPerDwelling]' role='measure' type='quantitative' />
      <column caption='Average Number Bedrooms Per Dwelling' datatype='integer' name='[AverageNumberBedroomsPerDwelling]' role='measure' type='quantitative' />
      <column caption='Average Number People Per Household' datatype='real' name='[AverageNumberPeoplePerHousehold]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='integer' name='[MedianAge]' role='measure' type='quantitative' />
      <column caption='Median Family Weekly Income' datatype='integer' name='[MedianFamilyWeeklyIncome]' role='measure' type='quantitative' />
      <column caption='Median House Price' datatype='integer' name='[MedianHousePrice]' role='measure' type='quantitative' />
      <column caption='Median Household Wee Ikly Income' datatype='integer' name='[MedianHouseholdWeeIklyIncome]' role='measure' type='quantitative' />
      <column caption='Median Mortgage Weekly Payment' datatype='real' name='[MedianMortgageWeeklyPayment]' role='measure' type='quantitative' />
      <column caption='Median Personal Weekly Income' datatype='integer' name='[MedianPersonalWeeklyIncome]' role='measure' type='quantitative' />
      <column caption='Median Unit Price' datatype='integer' name='[MedianUnitPrice]' role='measure' type='quantitative' />
      <column caption='Median Weekly Rent' datatype='integer' name='[MedianWeeklyRent]' role='measure' type='quantitative' />
      <column caption='Total Private Dwelling' datatype='integer' name='[TotalPrivateDwelling]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Transpose' datatype='table' name='[__tableau_internal_object_id__].[Transpose_54E7CECD19AD4366B262D6E0939F61CE]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Nepal&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Transpose' id='Transpose_54E7CECD19AD4366B262D6E0939F61CE'>
            <properties context=''>
              <relation connection='excel-direct.0n59agv1jsbtbr17naspv0s41z7s' name='Transpose' table='[Transpose$]' type='table'>
                <columns gridOrigin='A1:AZ11:no:A1:AZ11:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='string' name='Time' ordinal='1' />
                  <column datatype='integer' name='MedianHousePrice' ordinal='2' />
                  <column datatype='integer' name='MedianUnitPrice' ordinal='3' />
                  <column datatype='integer' name='MedianPersonalWeeklyIncome' ordinal='4' />
                  <column datatype='integer' name='MedianFamilyWeeklyIncome' ordinal='5' />
                  <column datatype='integer' name='MedianHouseholdWeeIklyIncome' ordinal='6' />
                  <column datatype='real' name='MedianMortgageWeeklyPayment' ordinal='7' />
                  <column datatype='integer' name='MedianWeeklyRent' ordinal='8' />
                  <column datatype='integer' name='Population' ordinal='9' />
                  <column datatype='integer' name='MedianAge' ordinal='10' />
                  <column datatype='integer' name='Families' ordinal='11' />
                  <column datatype='integer' name='TotalPrivateDwelling' ordinal='12' />
                  <column datatype='real' name='Married(%)' ordinal='13' />
                  <column datatype='real' name='Separated+Divorced(%)' ordinal='14' />
                  <column datatype='real' name='Widowed(%)' ordinal='15' />
                  <column datatype='real' name='NeverMarried(%)' ordinal='16' />
                  <column datatype='real' name='BirthInAustralia(%)' ordinal='17' />
                  <column datatype='real' name='Worked full-time(%)' ordinal='18' />
                  <column datatype='real' name='Worked part-time(%)' ordinal='19' />
                  <column datatype='real' name='Unemployment(%)' ordinal='20' />
                  <column datatype='real' name='PeopleTravelledToWorkByPublicTransport(%)' ordinal='21' />
                  <column datatype='real' name='PeopleTravelledToWorkByCar(%)' ordinal='22' />
                  <column datatype='real' name='AverageMotorVehiclesPerDwelling' ordinal='23' />
                  <column datatype='real' name='CoupleFamilyNoChidren(%)' ordinal='24' />
                  <column datatype='real' name='CoupleFamilyHasChidren(%)' ordinal='25' />
                  <column datatype='real' name='OneParentFamily(%)' ordinal='26' />
                  <column datatype='real' name='OtherFamily(%)' ordinal='27' />
                  <column datatype='real' name='OccupiedDwellings(%)' ordinal='28' />
                  <column datatype='real' name='UnoccupiedDwelling(%)' ordinal='29' />
                  <column datatype='real' name='SeparateHouse(dwellings%)' ordinal='30' />
                  <column datatype='real' name='SemiDetached(dwellings%)' ordinal='31' />
                  <column datatype='real' name='FlatUnitApartment(dwellings%)' ordinal='32' />
                  <column datatype='real' name='0xBedroom(%)' ordinal='33' />
                  <column datatype='real' name='1xBedroom(%)' ordinal='34' />
                  <column datatype='real' name='2xBedroom(%)' ordinal='35' />
                  <column datatype='real' name='3xBedroom(%)' ordinal='36' />
                  <column datatype='real' name='4xBedroom+(%)' ordinal='37' />
                  <column datatype='integer' name='AverageNumberBedroomsPerDwelling' ordinal='38' />
                  <column datatype='real' name='AverageNumberPeoplePerHousehold' ordinal='39' />
                  <column datatype='real' name='FullyOwned(%)' ordinal='40' />
                  <column datatype='real' name='OwnedWithMortgage(%)' ordinal='41' />
                  <column datatype='real' name='Rented(%)' ordinal='42' />
                  <column datatype='real' name='FamilyHouseHolds(%)' ordinal='43' />
                  <column datatype='real' name='SinglePersonHouseHolds(%)' ordinal='44' />
                  <column datatype='real' name='GroupHouseHold(%)' ordinal='45' />
                  <column datatype='real' name='LessThan$650WeeklyIncome(%)' ordinal='46' />
                  <column datatype='real' name='MoreThan$3000WeeklyIncome(%)' ordinal='47' />
                  <column datatype='real' name='HouseholdsRentPayments&lt;30%Income (%)' ordinal='48' />
                  <column datatype='real' name='HouseholdsRentPayments&gt;30%Income(%)' ordinal='49' />
                  <column datatype='real' name='HouseholdsMortgageRepayments&lt;30%Income(%)' ordinal='50' />
                  <column datatype='real' name='HouseholdsMortgageRepayments&gt;30%Income(%)' ordinal='51' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_DD12CC5C290D49E9A40A7EAF51C79C46]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total Wins for Countries by Gender' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Champion Country' />
        <param name='target' value='Total Wins for Countries by Gender' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg Loss vs Avg Win'>
      <table>
        <view>
          <datasources>
            <datasource caption='Australian Open (2023 Australia Open champions - v1)' name='federated.1cia3xi1ntbl2910ga7vm1evw4rg' />
          </datasources>
          <datasource-dependencies datasource='federated.1cia3xi1ntbl2910ga7vm1evw4rg'>
            <column datatype='string' name='[Champion]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Loss]' role='measure' type='quantitative' />
            <column datatype='string' name='[Score]' role='dimension' type='nominal' />
            <column datatype='real' name='[Win Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Loss]' derivation='Avg' name='[avg:Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win]' derivation='Avg' name='[avg:Win:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Champion]' derivation='None' name='[none:Champion:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='None' name='[none:Score:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Win Ratio]' derivation='Sum' name='[sum:Win Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win]' derivation='Sum' name='[sum:Win:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Loss:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win Ratio:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Win:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Loss:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win Ratio:qk]&quot;</bucket>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Year:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Score:nk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Multiple Values]</rows>
        <cols>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E3DAE7F6-A1FB-4FD1-B16F-8AAE12D21A41}' />
    </worksheet>
    <worksheet name='Bubble Diagram - Wins'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bubble Diagram - Country Total Win</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Australian Open (2023 Australia Open champions - v1)' name='federated.1cia3xi1ntbl2910ga7vm1evw4rg' />
          </datasources>
          <datasource-dependencies datasource='federated.1cia3xi1ntbl2910ga7vm1evw4rg'>
            <column datatype='string' name='[Champion Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Champion Nationality]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Loss]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column-instance column='[Champion Country]' derivation='None' name='[none:Champion Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Champion Nationality]' derivation='None' name='[none:Champion Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Loss]' derivation='Sum' name='[sum:Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win]' derivation='Sum' name='[sum:Win:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Nationality:nk]' />
              <size column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Loss:qk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{32932690-2BB5-4FC0-83DF-F736C662BEF2}' />
    </worksheet>
    <worksheet name='Geographical Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Australian Open (2023 Australia Open champions - v1)' name='federated.1cia3xi1ntbl2910ga7vm1evw4rg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cia3xi1ntbl2910ga7vm1evw4rg'>
            <column caption='1St-Loss' datatype='integer' name='[1st-loss]' role='measure' type='quantitative' />
            <column caption='1St-Won' datatype='integer' name='[1st-won]' role='measure' type='quantitative' />
            <column caption='2Nd-Loss' datatype='integer' name='[2nd-loss]' role='measure' type='quantitative' />
            <column caption='2Nd-Won' datatype='integer' name='[2nd-won]' role='measure' type='quantitative' />
            <column caption='3Rd-Loss' datatype='integer' name='[3rd-loss]' role='measure' type='quantitative' />
            <column caption='3Rd-Won' datatype='integer' name='[3rd-won]' role='measure' type='quantitative' />
            <column caption='4Th-Loss' datatype='integer' name='[4th-loss]' role='measure' type='quantitative' />
            <column caption='4Th-Won' datatype='integer' name='[4th-won]' role='measure' type='quantitative' />
            <column caption='5Th-Loss' datatype='integer' name='[5th-loss]' role='measure' type='quantitative' />
            <column caption='5Th-Won' datatype='integer' name='[5th-won]' role='measure' type='quantitative' />
            <column datatype='string' name='[Champion Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Champion]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Loss]' role='measure' type='quantitative' />
            <column datatype='string' name='[Runner-up Nationality]' role='dimension' type='nominal' />
            <column datatype='string' name='[Runner-up]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column-instance column='[Runner-up Nationality]' derivation='Attribute' name='[attr:Runner-up Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Runner-up]' derivation='Attribute' name='[attr:Runner-up:nk]' pivot='key' type='nominal' />
            <column-instance column='[1st-loss]' derivation='Avg' name='[avg:1st-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1st-won]' derivation='Avg' name='[avg:1st-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd-loss]' derivation='Avg' name='[avg:2nd-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd-won]' derivation='Avg' name='[avg:2nd-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd-loss]' derivation='Avg' name='[avg:3rd-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd-won]' derivation='Avg' name='[avg:3rd-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th-loss]' derivation='Avg' name='[avg:4th-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th-won]' derivation='Avg' name='[avg:4th-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5th-loss]' derivation='Avg' name='[avg:5th-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5th-won]' derivation='Avg' name='[avg:5th-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Loss]' derivation='Avg' name='[avg:Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win]' derivation='Avg' name='[avg:Win:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Champion Country]' derivation='None' name='[none:Champion Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Champion]' derivation='None' name='[none:Champion:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Longitude (generated)]' field-type='quantitative' max='32446875.790213674' min='-3678159.0843097493' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Latitude (generated)]' field-type='quantitative' max='12454692.89183303' min='-8392418.0069145374' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Win:qk]' num-steps='24' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
              <tooltip column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[attr:Runner-up:nk]' />
              <tooltip column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[attr:Runner-up Nationality:nk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[attr:Runner-up:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:1st-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:2nd-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:3rd-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:4th-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:5th-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:1st-loss:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:2nd-loss:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:3rd-loss:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:4th-loss:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:5th-loss:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Win:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Loss:qk]' />
              <geometry column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Latitude (generated)]</rows>
        <cols>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D6680577-B31D-4D69-992F-38D42D19F830}' />
    </worksheet>
    <worksheet name='Normalized Win'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 20 Champion Wins Normalized</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Australian Open (2023 Australia Open champions - v1)' name='federated.1cia3xi1ntbl2910ga7vm1evw4rg' />
          </datasources>
          <datasource-dependencies datasource='federated.1cia3xi1ntbl2910ga7vm1evw4rg'>
            <column caption='1St-Won Norm' datatype='real' name='[1St-Loss Norm  (copy)_1699545931447873541]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([1st-won])-WINDOW_MIN(SUM([1st-won])))/(WINDOW_MAX(SUM([1st-won]))-WINDOW_MIN(SUM([1st-won])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Win Rate Norm' datatype='real' name='[1St-Loss Norm  (copy)_1699545931449593862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Win Ratio])-WINDOW_MIN(SUM([Win Ratio])))/(WINDOW_MAX(SUM([Win Ratio]))-WINDOW_MIN(SUM([Win Ratio])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='1St-Won' datatype='integer' name='[1st-won]' role='measure' type='quantitative' />
            <column caption='2Nd-Won' datatype='integer' name='[2nd-won]' role='measure' type='quantitative' />
            <column caption='3Rd-Won' datatype='integer' name='[3rd-won]' role='measure' type='quantitative' />
            <column caption='4Th-Won' datatype='integer' name='[4th-won]' role='measure' type='quantitative' />
            <column caption='5Th-Won' datatype='integer' name='[5th-won]' role='measure' type='quantitative' />
            <column datatype='string' name='[Champion Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Champion]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Runner-up Nationality]' role='dimension' type='nominal' />
            <column datatype='real' name='[Win Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column caption='2Nd-Won Norm' datatype='real' name='[[2Nd-Loss]] Norm (copy)_1699545931453313034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([2nd-won])-WINDOW_MIN(SUM([2nd-won])))/(WINDOW_MAX(SUM([2nd-won]))-WINDOW_MIN(SUM([2nd-won])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='3Rd-Won Norm ' datatype='real' name='[[2Nd-Won]] Norm (copy) (copy)_1699545931453476875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([3rd-won])-WINDOW_MIN(SUM([3rd-won])))/(WINDOW_MAX(SUM([3rd-won]))-WINDOW_MIN(SUM([3rd-won])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='4Th-Won Norm' datatype='real' name='[[4Th-Loss]] Norm  (copy) (copy)_1699545931453898766]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([4th-won])-WINDOW_MIN(SUM([4th-won])))/(WINDOW_MAX(SUM([4th-won]))-WINDOW_MIN(SUM([4th-won])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='5Th-Won Norm' datatype='real' name='[[5Th-Loss]] Norm  (copy) (copy) (copy) (copy)_1699545931454148624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([5th-won])-WINDOW_MIN(SUM([5th-won])))/(WINDOW_MAX(SUM([5th-won]))-WINDOW_MIN(SUM([5th-won])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Champion Country]' derivation='None' name='[none:Champion Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Champion]' derivation='None' name='[none:Champion:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Runner-up Nationality]' derivation='None' name='[none:Runner-up Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[1St-Loss Norm  (copy)_1699545931447873541]' derivation='User' name='[usr:1St-Loss Norm  (copy)_1699545931447873541:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Champion]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[1St-Loss Norm  (copy)_1699545931449593862]' derivation='User' name='[usr:1St-Loss Norm  (copy)_1699545931449593862:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Champion]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[[2Nd-Loss]] Norm (copy)_1699545931453313034]' derivation='User' name='[usr:[2Nd-Loss]] Norm (copy)_1699545931453313034:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Champion]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[[2Nd-Won]] Norm (copy) (copy)_1699545931453476875]' derivation='User' name='[usr:[2Nd-Won]] Norm (copy) (copy)_1699545931453476875:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Champion]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[[4Th-Loss]] Norm  (copy) (copy)_1699545931453898766]' derivation='User' name='[usr:[4Th-Loss]] Norm  (copy) (copy)_1699545931453898766:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Champion]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[[5Th-Loss]] Norm  (copy) (copy) (copy) (copy)_1699545931454148624]' derivation='User' name='[usr:[5Th-Loss]] Norm  (copy) (copy) (copy) (copy)_1699545931454148624:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Champion]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931449593862:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931447873541:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[2Nd-Loss]] Norm (copy)_1699545931453313034:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[2Nd-Won]] Norm (copy) (copy)_1699545931453476875:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[4Th-Loss]] Norm  (copy) (copy)_1699545931453898766:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[5Th-Loss]] Norm  (copy) (copy) (copy) (copy)_1699545931454148624:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931449593862:qk:3]&quot;</bucket>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931447873541:qk:5]&quot;</bucket>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[2Nd-Loss]] Norm (copy)_1699545931453313034:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[2Nd-Won]] Norm (copy) (copy)_1699545931453476875:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[4Th-Loss]] Norm  (copy) (copy)_1699545931453898766:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[5Th-Loss]] Norm  (copy) (copy) (copy) (copy)_1699545931454148624:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Win])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Champion:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931447873541:qk:5]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931449593862:qk:3]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[2Nd-Loss]] Norm (copy)_1699545931453313034:qk:2]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[2Nd-Won]] Norm (copy) (copy)_1699545931453476875:qk:2]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[4Th-Loss]] Norm  (copy) (copy)_1699545931453898766:qk:2]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[5Th-Loss]] Norm  (copy) (copy) (copy) (copy)_1699545931454148624:qk:2]' included-values='non-null' />
          <slices>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</column>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</column>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931447873541:qk:5]</column>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:1St-Loss Norm  (copy)_1699545931449593862:qk:3]</column>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[2Nd-Loss]] Norm (copy)_1699545931453313034:qk:2]</column>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[2Nd-Won]] Norm (copy) (copy)_1699545931453476875:qk:2]</column>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[4Th-Loss]] Norm  (copy) (copy)_1699545931453898766:qk:2]</column>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[usr:[5Th-Loss]] Norm  (copy) (copy) (copy) (copy)_1699545931454148624:qk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='render-fold-reversed' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up Nationality:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up Nationality:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up Nationality:nk]' />
              <path column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15d05' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Multiple Values] + [federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Multiple Values])</rows>
        <cols>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{951793A6-9634-460B-B4B3-1CBEAF1CDF71}' />
    </worksheet>
    <worksheet name='Sum of Win and Loss'>
      <table>
        <view>
          <datasources>
            <datasource caption='Australian Open (2023 Australia Open champions - v1)' name='federated.1cia3xi1ntbl2910ga7vm1evw4rg' />
          </datasources>
          <datasource-dependencies datasource='federated.1cia3xi1ntbl2910ga7vm1evw4rg'>
            <column caption='1St-Loss' datatype='integer' name='[1st-loss]' role='measure' type='quantitative' />
            <column caption='1St-Won' datatype='integer' name='[1st-won]' role='measure' type='quantitative' />
            <column caption='2Nd-Loss' datatype='integer' name='[2nd-loss]' role='measure' type='quantitative' />
            <column caption='2Nd-Won' datatype='integer' name='[2nd-won]' role='measure' type='quantitative' />
            <column caption='3Rd-Loss' datatype='integer' name='[3rd-loss]' role='measure' type='quantitative' />
            <column caption='3Rd-Won' datatype='integer' name='[3rd-won]' role='measure' type='quantitative' />
            <column caption='4Th-Loss' datatype='integer' name='[4th-loss]' role='measure' type='quantitative' />
            <column caption='4Th-Won' datatype='integer' name='[4th-won]' role='measure' type='quantitative' />
            <column caption='5Th-Loss' datatype='integer' name='[5th-loss]' role='measure' type='quantitative' />
            <column caption='5Th-Won' datatype='integer' name='[5th-won]' role='measure' type='quantitative' />
            <column datatype='string' name='[Champion]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Score]' role='dimension' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Champion]' derivation='None' name='[none:Champion:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='None' name='[none:Score:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[1st-loss]' derivation='Sum' name='[sum:1st-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1st-won]' derivation='Sum' name='[sum:1st-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd-loss]' derivation='Sum' name='[sum:2nd-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd-won]' derivation='Sum' name='[sum:2nd-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd-loss]' derivation='Sum' name='[sum:3rd-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd-won]' derivation='Sum' name='[sum:3rd-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th-loss]' derivation='Sum' name='[sum:4th-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th-won]' derivation='Sum' name='[sum:4th-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5th-loss]' derivation='Sum' name='[sum:5th-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5th-won]' derivation='Sum' name='[sum:5th-won:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:1st-loss:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:1st-won:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:2nd-loss:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:2nd-won:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:3rd-loss:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:3rd-won:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:4th-loss:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:4th-won:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:5th-loss:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:5th-won:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Year:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Score:nk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Multiple Values]</rows>
        <cols>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C5029C31-DBA1-4709-9ED3-A2A72A3A720B}' />
    </worksheet>
    <worksheet name='Top Performer vs Runner Up'>
      <table>
        <view>
          <datasources>
            <datasource caption='Australian Open (2023 Australia Open champions - v1)' name='federated.1cia3xi1ntbl2910ga7vm1evw4rg' />
          </datasources>
          <datasource-dependencies datasource='federated.1cia3xi1ntbl2910ga7vm1evw4rg'>
            <column datatype='string' name='[Champion]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Runner-up Nationality]' role='dimension' type='nominal' />
            <column datatype='string' name='[Runner-up]' role='dimension' type='nominal' />
            <column datatype='string' name='[Score]' role='dimension' type='nominal' />
            <column datatype='real' name='[Win Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Win Ratio]' derivation='Avg' name='[avg:Win Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win]' derivation='Avg' name='[avg:Win:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Champion]' derivation='None' name='[none:Champion:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Runner-up Nationality]' derivation='None' name='[none:Runner-up Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Runner-up]' derivation='None' name='[none:Runner-up:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='None' name='[none:Score:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Win Ratio]' derivation='Sum' name='[sum:Win Ratio:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Win Ratio])' function='order' user:ui-marker='order'>
                <groupfilter expression='SUM([Win]) &gt;= 5' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:Champion:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
              <size column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Win Ratio:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up Nationality:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Score:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Year:nk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Win:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win Ratio:qk]</rows>
        <cols>([federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk] / [federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up:nk])</cols>
      </table>
      <simple-id uuid='{133CE65E-3E8A-45B2-9132-1C59AE25FCFC}' />
    </worksheet>
    <worksheet name='Total Wins for Countries by Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='Australian Open (2023 Australia Open champions - v1)' name='federated.1cia3xi1ntbl2910ga7vm1evw4rg' />
          </datasources>
          <datasource-dependencies datasource='federated.1cia3xi1ntbl2910ga7vm1evw4rg'>
            <column caption='1St-Loss' datatype='integer' name='[1st-loss]' role='measure' type='quantitative' />
            <column caption='1St-Won' datatype='integer' name='[1st-won]' role='measure' type='quantitative' />
            <column caption='2Nd-Loss' datatype='integer' name='[2nd-loss]' role='measure' type='quantitative' />
            <column caption='2Nd-Won' datatype='integer' name='[2nd-won]' role='measure' type='quantitative' />
            <column caption='3Rd-Loss' datatype='integer' name='[3rd-loss]' role='measure' type='quantitative' />
            <column caption='3Rd-Won' datatype='integer' name='[3rd-won]' role='measure' type='quantitative' />
            <column caption='4Th-Loss' datatype='integer' name='[4th-loss]' role='measure' type='quantitative' />
            <column caption='4Th-Won' datatype='integer' name='[4th-won]' role='measure' type='quantitative' />
            <column caption='5Th-Loss' datatype='integer' name='[5th-loss]' role='measure' type='quantitative' />
            <column caption='5Th-Won' datatype='integer' name='[5th-won]' role='measure' type='quantitative' />
            <column datatype='string' name='[Champion Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Win Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column-instance column='[Champion Country]' derivation='None' name='[none:Champion Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[1st-loss]' derivation='Sum' name='[sum:1st-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1st-won]' derivation='Sum' name='[sum:1st-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd-loss]' derivation='Sum' name='[sum:2nd-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd-won]' derivation='Sum' name='[sum:2nd-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd-loss]' derivation='Sum' name='[sum:3rd-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd-won]' derivation='Sum' name='[sum:3rd-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th-loss]' derivation='Sum' name='[sum:4th-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th-won]' derivation='Sum' name='[sum:4th-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5th-loss]' derivation='Sum' name='[sum:5th-loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5th-won]' derivation='Sum' name='[sum:5th-won:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win Ratio]' derivation='Sum' name='[sum:Win Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win]' derivation='Sum' name='[sum:Win:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' value='#ffff00' />
            <format attr='font-weight' data-class='subtotal' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' value='11' />
            <format attr='font-size' value='11' />
            <format attr='font-weight' value='bold' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' value='bold' />
            <format attr='font-style' field='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' value='normal' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win:qk]' />
              <color column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win Ratio:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:1st-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:1st-loss:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:2nd-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:2nd-loss:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:3rd-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:3rd-loss:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:4th-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:4th-loss:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:5th-won:qk]' />
              <lod column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:5th-loss:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DEA4906A-AC7B-477B-AFDA-B83A24E542A5}' />
    </worksheet>
    <worksheet name='Word Cloud - Champion Wins'>
      <table>
        <view>
          <datasources>
            <datasource caption='Australian Open (2023 Australia Open champions - v1)' name='federated.1cia3xi1ntbl2910ga7vm1evw4rg' />
          </datasources>
          <datasource-dependencies datasource='federated.1cia3xi1ntbl2910ga7vm1evw4rg'>
            <column datatype='string' name='[Champion Nationality]' role='dimension' type='nominal' />
            <column datatype='string' name='[Champion]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column-instance column='[Champion Nationality]' derivation='None' name='[none:Champion Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Champion]' derivation='None' name='[none:Champion:nk]' pivot='key' type='nominal' />
            <column-instance column='[Win]' derivation='Sum' name='[sum:Win:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Nationality:nk]' />
              <size column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:Win:qk]' />
              <text column='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F42F428C-2ADD-40CE-88BF-6C3F3AE35C99}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' maximized='true' name='Normalized Win'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' type='color' />
            <card param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Nationality:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up Nationality:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Score:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0767AFA-B71C-45B3-AC82-705020111F53}' />
    </window>
    <window class='worksheet' name='Sum of Win and Loss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</field>
                  <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]</field>
                  <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Score:nk]</field>
                  <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Year:nk]</field>
                  <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</field>
                  <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Gerald Patterson&quot;</value>
                <value>&quot;Men&apos;s&quot;</value>
                <value>&quot;3–6, 6–4, 3–6, 18–16, 6–3&quot;</value>
                <value>&quot;1927&quot;</value>
                <value>&quot;[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[sum:4th-loss:qk]&quot;</value>
                <value>16.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Score:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB4AD141-1CB1-42ED-B21F-D511E2B44F01}' />
    </window>
    <window class='worksheet' name='Avg Loss vs Avg Win'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[:Measure Names]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Score:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B069E685-3822-4EAB-8A31-A62A005E6AD2}' />
    </window>
    <window class='worksheet' name='Geographical Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up Nationality:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF36A31F-2409-4DB6-97DF-FA2ED3B16E5E}' />
    </window>
    <window class='worksheet' name='Total Wins for Countries by Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Score:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C8DCD66-72FD-4FA8-8AB4-5BAF511B5D72}' />
    </window>
    <window class='worksheet' name='Word Cloud - Champion Wins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Nationality:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Nationality:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30F71BF8-6B44-4655-8D96-BE42C6028E5B}' />
    </window>
    <window class='worksheet' name='Bubble Diagram - Wins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Nationality:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Country:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion Nationality:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Gender:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{094B8AF7-C1E7-4F4C-AC68-48F5E459B191}' />
    </window>
    <window class='worksheet' name='Top Performer vs Runner Up'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[avg:Win Ratio:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Champion:nk]</field>
            <field>[federated.1cia3xi1ntbl2910ga7vm1evw4rg].[none:Runner-up:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA18625C-2BDB-4AED-9515-D3541D8D05CD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Loss vs Avg Win' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bubble Diagram - Wins' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geographical Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Normalized Win' width='192'>
      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
      /wFbg4P1pHP2JgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sum of Win and Loss' width='192'>
      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
      +LxH/y+xlLQNWPiY6wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Performer vs Runner Up' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Wins for Countries by Gender' width='192'>
      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
      Pww3kBMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Word Cloud - Champion Wins' width='192'>
      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
      7QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
